timeout: 1800s

options:
  env:
  - PROJECT_ID=$PROJECT_ID

steps:
- name: gcr.io/$PROJECT_ID/gcloud-jsonnet-cbif:1.1
  id: "Setup kubectl credentials"
  args:
  - gcloud container clusters get-credentials
    --project="${PROJECT_ID}" --region="$_CLUSTER_REGION" "$_CLUSTER_NAME"

- name: gcr.io/$PROJECT_ID/golang-cbif:1.20
  id: "Run all unit tests"
  args:
  - go version
  - go get -v -t ./...
  - go test -v -race ./...
  - go test -v ./...

- name: gcr.io/cloud-builders/docker
  id: "Build the autoloader docker image"
  args: [
    "build",
      "-t", "gcr.io/$PROJECT_ID/autoloader:${COMMIT_SHA}",
      "-f", "Dockerfile", "."
  ]

- name: gcr.io/cloud-builders/docker
  id: "Push the docker container to gcr.io"
  args: [
    "push", "gcr.io/$PROJECT_ID/autoloader:${COMMIT_SHA}",
  ]

- name: gcr.io/$PROJECT_ID/gcloud-jsonnet-cbif:1.1
  id: "Deploy the v1 autoloader"
  args:
  - |-
    sed -i -e 's/{{IMAGE_TAG}}/'${COMMIT_SHA}'/'
           -e 's/{{PROJECT_ID}}/'${PROJECT_ID}'/'
           -e 's/{{BQ_PROJECT}}/'${PROJECT_ID}'/'
           -e 's/{{VIEW_PROJECT}}/'$_VIEW_PROJECT'/'
           -e 's/{{GCS_PROJECT}}/'$_GCS_PROJECT'/'
           -e 's/{{MLAB_BUCKET}}/'$_MLAB_BUCKET'/'
           -e 's/{{BUCKETS}}/'$_BUCKETS'/'
           k8s/autoloader.yaml
  - kubectl apply -f k8s/autoloader.yaml
  env:
  - PROJECT_IN=mlab-sandbox,mlab-staging,mlab-oti
#  - CLOUDSDK_COMPUTE_REGION=$_CLUSTER_REGION
#  - CLOUDSDK_CONTAINER_CLUSTER=$_CLUSTER_NAME

#- name: gcr.io/cloud-builders/kubectl
#  id: "Deploy the v1 autoloader"
#  entrypoint: /bin/bash
#  args:
#  - -c
#  - |-
#    sed -i -e 's/{{IMAGE_TAG}}/'${COMMIT_SHA}'/' \
#           -e 's/{{PROJECT_ID}}/'${PROJECT_ID}'/' \
#           -e 's/{{BQ_PROJECT}}/'${PROJECT_ID}'/' \
#           -e 's/{{VIEW_PROJECT}}/'$_VIEW_PROJECT'/' \
#           -e 's/{{GCS_PROJECT}}/'$_GCS_PROJECT'/' \
#           -e 's/{{MLAB_BUCKET}}/'$_MLAB_BUCKET'/' \
#           -e 's/{{BUCKETS}}/'$_BUCKETS'/' \
#           k8s/autoloader.yaml
#    /builder/kubectl.bash apply -f k8s/autoloader.yaml
#  env:
#  - CLOUDSDK_COMPUTE_REGION=$_CLUSTER_REGION
#  - CLOUDSDK_CONTAINER_CLUSTER=$_CLUSTER_NAME

# The "hourly" job runs every 3 hours and loads the data for the last day.
# The "weekly" job runs once per month and loads the data from the last month
# to the last day.
# The "monthly" job runs once per month and loads the data from the beginning of
# the archive to the last month.
- name: gcr.io/$PROJECT_ID/gcloud-jsonnet-cbif:1.1
  id: "Deploy v1 cron jobs"
  args:
  - |-
    sed -e 's/{{FREQUENCY}}/hourly/'
        -e 's/{{CRON_SCHEDULE}}/0 *\/3 * * */'
        -e 's/{{VERSION}}/v1/'
        -e 's/{{LOAD_PERIOD}}/daily/'
        k8s/autoloader-cronjob.yaml.template > autoloader-hourly-cronjob.yaml
  - |-
    sed -e 's/{{FREQUENCY}}/weekly/'
        -e 's/{{CRON_SCHEDULE}}/0 0 * * 0/'
        -e 's/{{VERSION}}/v1/'
        -e 's/{{LOAD_PERIOD}}/monthly/'
        k8s/autoloader-cronjob.yaml.template > autoloader-weekly-cronjob.yaml
  - |-
    sed -e 's/{{FREQUENCY}}/monthly/'
        -e 's/{{CRON_SCHEDULE}}/0 0 1 * */'
        -e 's/{{VERSION}}/v1/'
        -e 's/{{LOAD_PERIOD}}/annually/'
        k8s/autoloader-cronjob.yaml.template > autoloader-monthly-cronjob.yaml

  - kubectl apply -f autoloader-hourly-cronjob.yaml
  - kubectl apply -f autoloader-weekly-cronjob.yaml
  - kubectl apply -f autoloader-monthly-cronjob.yaml
  env:
  - PROJECT_IN=mlab-sandbox,mlab-staging,mlab-oti
  - CLOUDSDK_COMPUTE_REGION=$_CLUSTER_REGION
  - CLOUDSDK_CONTAINER_CLUSTER=$_CLUSTER_NAME
